@page
@model ManageModel
@{
    ViewData["Title"] = "Управление сотрудниками";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-users me-2"></i>Управление сотрудниками</h2>
                <a asp-page="/Employees/Create" asp-route-returnUrl="/Employees/Manage" class="btn btn-success">
                    <i class="fas fa-user-plus me-1"></i>Добавить сотрудника
                </a>
            </div>
        </div>
    </div>

    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-primary text-white">
            <h6 class="mb-0"><i class="fas fa-search me-2"></i>Поиск и фильтрация</h6>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <label for="search" class="form-label">
                        <i class="fas fa-search me-1"></i>Поиск по ФИО
                    </label>
                    <input type="text" class="form-control" id="search" placeholder="Введите ФИО для поиска">
                </div>
                <div class="col-md-4">
                    <label for="departmentId" class="form-label">
                        <i class="fas fa-building me-1"></i>Отдел
                    </label>
                    <select class="form-select" id="departmentId">
                        <option value="">Все отделы</option>
                        @foreach (var department in Model.Departments)
                        {
                            <option value="@department.Id">@department.Name</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="positionSearch" class="form-label">
                        <i class="fas fa-user-tie me-1"></i>Поиск по должности
                    </label>
                    <input type="text" class="form-control" id="positionSearch" placeholder="Введите должность для поиска">
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Список сотрудников (@Model.Employees.Count())</h5>
            <a href="@Url.Page("/Print/AllEmployees")" target="_blank" class="btn btn-outline-primary btn-sm">
                <i class="fas fa-print me-1"></i>Печать всех
            </a>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <div class="table-container">
                    <table class="table mb-0">
                        <thead class="table-dark sticky-header">
                            <tr>
                                <th class="text-center" style="border-right: 3px solid rgb(33, 37, 41) !important; border-bottom: 2px solid rgb(33, 37, 41) !important;">Должность / ФИО</th>
                                <th class="text-center" style="border-right: 3px solid rgb(33, 37, 41) !important; border-bottom: 2px solid rgb(33, 37, 41) !important;">Городской номер</th>
                                <th class="text-center" style="border-right: 3px solid rgb(33, 37, 41) !important; border-bottom: 2px solid rgb(33, 37, 41) !important;">Местный номер</th>
                                <th class="text-center" style="border-bottom: 2px solid rgb(33, 37, 41) !important;">Действия</th>
                            </tr>
                        </thead>
                        <tbody id="employeesTable">
                            @{
                                var groupedEmployees = Model.Employees.GroupBy(e => e.Department.Name).OrderBy(g => g.Key);
                            }
                            @foreach (var departmentGroup in groupedEmployees)
                            {
                                <tr class="department-header">
                                    <td colspan="4" class="text-center fw-bold py-3" style="">
                                        <span class="badge bg-purple text-white me-2" style="background: linear-gradient(45deg, #6f42c1, #5a2d91);">
                                            <i class="fas fa-building me-1"></i>Отдел
                                        </span>
                                        @departmentGroup.Key
                                    </td>
                                </tr>
                                @foreach (var employee in departmentGroup)
                                {
                                    <tr>
                                        <td class="text-center" style="border-right: 3px solid rgb(33, 37, 41) !important;">
                                            @if (!string.IsNullOrEmpty(employee.PositionDescription))
                                            {
                                                <span class="badge @(employee.IsHeadOfDepartment ? "bg-warning text-dark" : "bg-primary text-white") position-badge me-2" style="@(employee.IsHeadOfDepartment ? "background: linear-gradient(45deg, #ffc107, #e0a800);" : "background: linear-gradient(45deg, #007bff, #0056b3);")">
                                                    <i class="fas @(employee.IsHeadOfDepartment ? "fa-crown" : "fa-user-tie") me-1"></i>@employee.PositionDescription
                                                </span>
                                                @if (!string.IsNullOrEmpty(employee.FullName))
                                                {
                                                    <strong>@employee.FullName</strong>
                                                }
                                            }
                                            else
                                            {
                                                <span class="text-muted fst-italic">-</span>
                                            }
                                        </td>
                                        <td class="text-center" style="border-right: 3px solid rgb(33, 37, 41) !important;">@(employee.CityPhone ?? "Не указано")</td>
                                        <td class="text-center" style="border-right: 3px solid rgb(33, 37, 41) !important;">@(employee.LocalPhone ?? "Не указано")</td>
                                        <td class="text-center" style="">
                                            <div class="btn-group" role="group">
                                                <a asp-page="/Employees/Edit" asp-route-id="@employee.Id" asp-route-returnUrl="/Employees/Manage" class="btn btn-sm btn-outline-warning" title="Редактировать">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <a asp-page="/Employees/Delete" asp-route-id="@employee.Id" asp-route-returnUrl="/Employees/Manage" class="btn btn-sm btn-outline-danger" title="Удалить">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            @if (!Model.Employees.Any())
                            {
                                <tr>
                                    <td colspan="4" class="text-center text-muted py-4">Сотрудники не найдены</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('search');
        const departmentSelect = document.getElementById('departmentId');
        const positionSearchInput = document.getElementById('positionSearch');
        const tbody = document.getElementById('employeesTable');

        function performSearch() {
            const searchTerm = searchInput.value;
            const departmentId = departmentSelect.value;
            const positionSearch = positionSearchInput.value;

            tbody.innerHTML = '<tr><td colspan="4" class="text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Загрузка...</span></div></td></tr>';

            const params = new URLSearchParams();
            if (searchTerm) params.append('search', searchTerm);
            if (departmentId) params.append('departmentId', departmentId);
            if (positionSearch) params.append('positionSearch', positionSearch);

            fetch(`/api/search?${params.toString()}`)
                .then(response => response.json())
                .then(data => {
                    if (data.employees && data.employees.length > 0) {
                        const grouped = data.employees.reduce((groups, emp) => {
                            const dept = emp.departmentName;
                            if (!groups[dept]) groups[dept] = [];
                            groups[dept].push(emp);
                            return groups;
                        }, {});

                        let html = '';
                        Object.keys(grouped).sort().forEach(deptName => {
                            html += `
                                <tr class="department-header">
                                    <td colspan="4" class="text-start fw-bold py-3">
                                        <i class="fas fa-building me-2"></i>${deptName}
                                    </td>
                                </tr>
                            `;
                            grouped[deptName].forEach(emp => {
                                let positionBadge = '';
                                if (emp.positionDescription) {
                                    const isHead = emp.isHeadOfDepartment;
                                    const badgeClass = isHead ? 'bg-warning text-dark' : 'bg-primary text-white';
                                    const iconClass = isHead ? 'fa-crown' : 'fa-user-tie';
                                    const badgeStyle = isHead ? 'background: linear-gradient(45deg, #ffc107, #e0a800) !important;' : 'background: linear-gradient(45deg, #007bff, #0056b3) !important;';

                                    positionBadge = `<span class="badge ${badgeClass} position-badge me-2" style="${badgeStyle}"><i class="fas ${iconClass} me-1"></i>${emp.positionDescription}</span>`;
                                    if (emp.fullName && emp.fullName !== '-') {
                                        positionBadge += `<strong>${emp.fullName}</strong>`;
                                    }
                                } else {
                                    positionBadge = '<span class="text-muted fst-italic">-</span>';
                                }

                                html += `
                                    <tr>
                                        <td class="text-center" style="border-right: 3px solid rgb(33, 37, 41) !important;">
                                            ${positionBadge}
                                        </td>
                                        <td class="text-center" style="border-right: 3px solid rgb(33, 37, 41) !important;">${emp.cityPhone || 'Не указано'}</td>
                                        <td class="text-center" style="border-right: 3px solid rgb(33, 37, 41) !important;">${emp.localPhone || 'Не указано'}</td>
                                        <td class="text-center" style="">
                                            <div class="btn-group" role="group">
                                                <a href="/Employees/Edit?id=${emp.id}&returnUrl=/Employees/Manage" class="btn btn-sm btn-outline-warning" title="Редактировать">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <a href="/Employees/Delete?id=${emp.id}&returnUrl=/Employees/Manage" class="btn btn-sm btn-outline-danger" title="Удалить">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                `;
                            });
                        });
                        tbody.innerHTML = html;
                    } else {
                        tbody.innerHTML = '<tr><td colspan="4" class="text-center text-muted">Сотрудники не найдены</td></tr>';
                    }
                })
                .catch(error => {
                    console.error('Ошибка поиска:', error);
                    tbody.innerHTML = '<tr><td colspan="4" class="text-center text-danger">Ошибка при выполнении поиска</td></tr>';
                });
        }

        searchInput.addEventListener('input', function() {
            clearTimeout(this.searchTimeout);
            this.searchTimeout = setTimeout(performSearch, 300);
        });

        departmentSelect.addEventListener('change', performSearch);
        positionSearchInput.addEventListener('input', function() {
            clearTimeout(this.searchTimeout);
            this.searchTimeout = setTimeout(performSearch, 300);
        });
    });
</script>
