@page
@model EmployeeDirectory.Pages.Print.PrintLogsModel
@{
    ViewData["Title"] = "Печать логов системы";
}

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Логи системы - Печать</title>
    <style>
        @@page {
            size: A4 @(ViewData["Orientation"]);
            margin: 15mm;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: @(ViewData["Scale"])%;
            color: #000 !important;
            background: white;
            margin: 0;
            padding: 0;
            line-height: 1.4;
            font-weight: bold !important;
        }
        
        
        .print-table {
            width: 100%;
            border-collapse: collapse;
            margin: 0;
            page-break-inside: auto;
        }
        
        .print-table thead {
            display: table-header-group;
        }
        
        .print-table tbody {
            display: table-row-group;
        }
        
        .print-table tr {
            page-break-inside: avoid;
            page-break-after: auto;
        }
        
        .print-table th {
            background: #000 !important;
            color: white !important;
            padding: 8px;
            text-align: center;
            font-weight: bold !important;
            border: 1px solid #000;
        }
        
        .print-table td {
            padding: 8px;
            text-align: center;
            border: 1px solid #000;
            vertical-align: middle;
            color: #000 !important;
            font-weight: bold !important;
        }
        
        .print-table tr:nth-child(even) td {
            background: #f8f9fa;
        }
        
        .log-level {
            font-weight: bold !important;
            color: #000 !important;
        }
        
        .log-message {
            font-weight: bold !important;
            color: #000 !important;
        }
        
        .log-timestamp {
            font-weight: bold !important;
            color: #000 !important;
        }
        
        .log-level {
            padding: 2px 6px;
            border-radius: 3px;
            font-size: 10px;
            font-weight: bold;
        }
        
        .log-level-info {
            background: #d1ecf1;
            color: #0c5460;
        }
        
        .log-level-warning {
            background: #fff3cd;
            color: #856404;
        }
        
        .log-level-error {
            background: #f8d7da;
            color: #721c24;
        }
        
        
        @@media print and (orientation: landscape) {
            body {
                font-size: 8px;
            }
            
            .print-container {
                display: flex;
                gap: 10px;
                height: 100vh;
            }
            
            .print-column {
                flex: 1;
                max-width: 48%;
            }
            
            .print-table th,
            .print-table td {
                padding: 4px;
                font-size: 7px;
            }
            
            .log-level {
                font-size: 6px;
                padding: 1px 3px;
            }
            
            .print-header h1 {
                font-size: 18px;
            }
            
            .print-header p {
                font-size: 10px;
            }
        }
        
        @@media print and (orientation: portrait) {
            .print-container {
                display: block;
            }
        }
    </style>
</head>
<body>

    @if (Model.Logs.Any())
    {
        <div class="print-container">
            @{
                var orientation = ViewData["Orientation"]?.ToString() ?? "portrait";
                
                if (orientation == "landscape")
                {
                    var leftColumn = Model.Logs.Take((Model.Logs.Count() + 1) / 2);
                    var rightColumn = Model.Logs.Skip((Model.Logs.Count() + 1) / 2);
                    
                    <div class="print-column">
                        <table class="print-table">
                            <thead>
                                <tr>
                                    <th style="width: 15%;">Время</th>
                                    <th style="width: 15%;">Уровень</th>
                                    <th style="width: 25%;">Пользователь</th>
                                    <th style="width: 45%;">Действие</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var log in leftColumn)
                                {
                                    <tr>
                                        <td>@log.TimestampUtc.ToString("HH:mm:ss")</td>
                                        <td>
                                            <span class="log-level log-level-info">INFO</span>
                                        </td>
                                        <td>@log.UserName</td>
                                        <td>@log.Action</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="print-column">
                        <table class="print-table">
                            <thead>
                                <tr>
                                    <th style="width: 15%;">Время</th>
                                    <th style="width: 15%;">Уровень</th>
                                    <th style="width: 25%;">Пользователь</th>
                                    <th style="width: 45%;">Действие</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var log in rightColumn)
                                {
                                    <tr>
                                        <td>@log.TimestampUtc.ToString("HH:mm:ss")</td>
                                        <td>
                                            <span class="log-level log-level-info">INFO</span>
                                        </td>
                                        <td>@log.UserName</td>
                                        <td>@log.Action</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <table class="print-table">
                        <thead>
                            <tr>
                                <th style="width: 15%;">Время</th>
                                <th style="width: 15%;">Уровень</th>
                                <th style="width: 25%;">Пользователь</th>
                                <th style="width: 45%;">Действие</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var log in Model.Logs)
                            {
                                <tr>
                                    <td>@log.TimestampUtc.ToString("dd.MM.yyyy HH:mm:ss")</td>
                                    <td>
                                        <span class="log-level log-level-info">INFO</span>
                                    </td>
                                    <td>@log.UserName</td>
                                    <td>@log.Action</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            }
        </div>
    }
    else
    {
        <div style="text-align: center; padding: 50px; color: #7f8c8d;">
            <i class="fas fa-exclamation-triangle fa-2x mb-3"></i>
            <p>Логи не найдены</p>
        </div>
    }


    <script>
        window.onload = function() {
            setTimeout(function() {
                window.print();
            }, 500);
        };

        window.addEventListener('afterprint', function() {
            window.close();
        });

        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                window.close();
            }
        });
    </script>
</body>
</html>