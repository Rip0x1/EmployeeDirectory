–ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ EMPLOYEE DIRECTORY
===============================================

–°–û–î–ï–†–ñ–ê–ù–ò–ï:
1. Windows Server (IIS)
2. Linux Server (Ubuntu/CentOS)
3. Docker
4. –û–±–ª–∞—á–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
6. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
7. –ß–µ–∫-–ª–∏—Å—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

===============================================
1. WINDOWS SERVER (IIS)
===============================================

–ü–û–î–ì–û–¢–û–í–ö–ê –°–ï–†–í–ï–†–ê:
- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ .NET 8 Runtime (–Ω–µ SDK)
- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ IIS —Å –º–æ–¥—É–ª—è–º–∏ ASP.NET Core
- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Hosting Bundle –¥–ª—è .NET 8

–ü–£–ë–õ–ò–ö–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø:
dotnet publish -c Release -o ./publish

–ù–ê–°–¢–†–û–ô–ö–ê IIS:
1. –°–æ–∑–¥–∞–π—Ç–µ —Å–∞–π—Ç –≤ IIS Manager
2. –£–∫–∞–∂–∏—Ç–µ –ø–∞–ø–∫—É —Å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Application Pool –¥–ª—è .NET Core
4. –î–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª web.config (—Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)

===============================================
2. LINUX SERVER (UBUNTU/CENTOS)
===============================================

–£–°–¢–ê–ù–û–í–ö–ê .NET 8:

Ubuntu/Debian:
wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
sudo apt update
sudo apt install dotnet-runtime-8.0

CentOS/RHEL:
sudo rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm
sudo yum install dotnet-runtime-8.0

–ü–£–ë–õ–ò–ö–ê–¶–ò–Ø:
dotnet publish -c Release -o ./publish --self-contained false

–°–û–ó–î–ê–ù–ò–ï SYSTEMD –°–ï–†–í–ò–°–ê:
–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª /etc/systemd/system/employeedirectory.service:

[Unit]
Description=Employee Directory App
After=network.target

[Service]
Type=notify
ExecStart=/usr/bin/dotnet /var/www/employeedirectory/EmployeeDirectory.dll
Restart=always
RestartSec=10
User=www-data
Environment=ASPNETCORE_ENVIRONMENT=Production
Environment=ASPNETCORE_URLS=http://localhost:5000

[Install]
WantedBy=multi-user.target

–ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–ê:
sudo systemctl enable employeedirectory
sudo systemctl start employeedirectory

===============================================
3. NGINX –ö–ê–ö REVERSE PROXY (LINUX)
===============================================

–£–°–¢–ê–ù–û–í–ö–ê NGINX:
sudo apt install nginx  # Ubuntu
sudo yum install nginx  # CentOS

–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø NGINX:
–°–æ–∑–¥–∞–π—Ç–µ /etc/nginx/sites-available/employeedirectory:

server {
    listen 80;
    server_name your-domain.com;

    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

–ê–ö–¢–ò–í–ê–¶–ò–Ø:
sudo ln -s /etc/nginx/sites-available/employeedirectory /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl restart nginx

===============================================
4. DOCKER (–£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û)
===============================================

–°–û–ó–î–ê–ù–ò–ï DOCKERFILE:
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 80

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src
COPY . .
RUN dotnet restore
RUN dotnet build -c Release -o /app/build

FROM build AS publish
RUN dotnet publish -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "EmployeeDirectory.dll"]

–°–ë–û–†–ö–ê –ò –ó–ê–ü–£–°–ö:
docker build -t employeedirectory .
docker run -d -p 8080:80 --name emp-dir employeedirectory

===============================================
5. –û–ë–õ–ê–ß–ù–´–ï –ü–õ–ê–¢–§–û–†–ú–´
===============================================

AZURE:
- Azure App Service
- –ü—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏—Ç–µ ZIP —Å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î

AWS:
- Elastic Beanstalk
- EC2 —Å Docker
- Lambda (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –ø–æ–¥ serverless)

DIGITALOCEAN/AWS EC2:
- –°–æ–∑–¥–∞–π—Ç–µ Ubuntu —Å–µ—Ä–≤–µ—Ä
- –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è Linux –≤—ã—à–µ

===============================================
6. –ù–ê–°–¢–†–û–ô–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•
===============================================

SQL SERVER –ù–ê LINUX:
curl -o /etc/yum.repos.d/mssql-server.repo https://packages.microsoft.com/config/rhel/8/mssql-server-2022.repo
sudo yum install -y mssql-server
sudo /opt/mssql/bin/mssql-conf setup

POSTGRESQL (–ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê):
sudo apt install postgresql postgresql-contrib
sudo -u postgres createdb employeedirectory

===============================================
7. –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨
===============================================

FIREWALL:
sudo ufw allow 22    # SSH
sudo ufw allow 80    # HTTP
sudo ufw allow 443   # HTTPS
sudo ufw enable

SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢ (LET'S ENCRYPT):
sudo apt install certbot python3-certbot-nginx
sudo certbot --nginx -d your-domain.com

–ù–ê–°–¢–†–û–ô–ö–ê APPSETTINGS.PRODUCTION.JSON:
{
  "ConnectionStrings": {
    "DefaultConnection": "Server=localhost;Database=EmployeeDirectory;Trusted_Connection=true;"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  }
}

===============================================
8. –ß–ï–ö-–õ–ò–°–¢ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø
===============================================

–û–°–ù–û–í–ù–´–ï –®–ê–ì–ò:
‚ñ° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å .NET 8 Runtime
‚ñ° –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (dotnet publish)
‚ñ° –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
‚ñ° –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
‚ñ° –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä (IIS/Nginx)
‚ñ° –ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
‚ñ° –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏
‚ñ° –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
- –ù–∞—á–Ω–∏—Ç–µ —Å –ø—Ä–æ—Å—Ç–æ–≥–æ Linux —Å–µ—Ä–≤–µ—Ä–∞ + Nginx + systemd
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –±—ç–∫–∞–ø—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
- –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

===============================================
–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´
===============================================

–ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ï–†–í–ò–°–ê:
sudo systemctl status employeedirectory

–ü–†–û–°–ú–û–¢–† –õ–û–ì–û–í:
sudo journalctl -u employeedirectory -f

–ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–ê:
sudo systemctl restart employeedirectory

–ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í:
netstat -tlnp | grep :5000

–ü–†–û–í–ï–†–ö–ê NGINX:
sudo nginx -t
sudo systemctl status nginx

===============================================
–ö–û–ù–¢–ê–ö–¢–´ –ò –ü–û–î–î–ï–†–ñ–ö–ê
===============================================

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ firewall
4. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤

–£–¥–∞—á–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è! üöÄ
